{"version":3,"sources":["C:\\WorkSpaces\\EtsProject\\Source\\Ets\\EmployeeRequest\\EmployeeRequest\\webpack\\bootstrap","C:\\WorkSpaces\\EtsProject\\Source\\Ets\\EmployeeRequest\\EmployeeRequest\\sw.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;;AAElB;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,iBAAiB;AAClG;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6BAA6B,KAAyB;AACxF;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW,KAAK,kBAAkB;AACtF;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG","file":"../service-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./sw.js\");\n","//const DEBUG = false;\r\n\r\n// When the user navigates to your site,\r\n// the browser tries to redownload the script file that defined the service\r\n// worker in the background.\r\n// If there is even a byte's difference in the service worker file compared\r\n// to what it currently has, it considers it 'new'.\r\n//const { assets } = global.serviceWorkerOption;\r\n\r\n//const CACHE_NAME = new Date().toISOString();\r\n\r\n//let assetsToCache = [...assets, './'];\r\n\r\n//assetsToCache = assetsToCache.map(path => {\r\n//    return new URL(path, global.location).toString();\r\n//});\r\n\r\n//assetsToCache = [];\r\n\r\n// When the service worker is first added to a computer.\r\n//self.addEventListener('install', event => {\r\n//   Perform install steps.\r\n//  if (DEBUG) {\r\n//    console.log('[SW] Install event');\r\n//  }\r\n\r\n//  // Add core website files to cache during serviceworker installation.\r\n//  event.waitUntil(\r\n//    global.caches\r\n//      .open(CACHE_NAME)\r\n//      .then(cache => {\r\n//        return cache.addAll(assetsToCache);\r\n//      })\r\n//      .then(() => {\r\n//        if (DEBUG) {\r\n//          console.log('Cached assets: main', assetsToCache);\r\n//        }\r\n//      })\r\n//      .catch(error => {\r\n//        console.error(error);\r\n//        throw error;\r\n//      })\r\n//  );\r\n//});\r\n\r\n// After the install event.\r\n//self.addEventListener('activate', event => {\r\n//  if (DEBUG) {\r\n//    console.log('[SW] Activate event');\r\n//  }\r\n\r\n//   Clean the caches\r\n//  event.waitUntil(\r\n//    global.caches.keys().then(cacheNames => {\r\n//      return Promise.all(\r\n//        cacheNames.map(cacheName => {\r\n//           Delete the caches that are not the current one.\r\n//          if (cacheName.indexOf(CACHE_NAME) === 0) {\r\n//            return null;\r\n//          }\r\n\r\n//          return global.caches.delete(cacheName);\r\n//        })\r\n//      )\r\n//    })\r\n//  );\r\n//})\r\n\r\n//self.addEventListener('message', event => {\r\n//  switch (event.data.action) {\r\n//    case 'skipWaiting':\r\n//      if (self.skipWaiting) {\r\n//        self.skipWaiting();\r\n//        self.clients.claim();\r\n//      }\r\n//      break\r\n//    default:\r\n//      break\r\n//  }\r\n//})\r\n\r\nvar CACHE = 'cache-and-update';\r\n\r\nself.addEventListener('install', function () {\r\n    return self.skipWaiting();\r\n});\r\n\r\nself.addEventListener('activate', function () {\r\n    return self.clients.claim();\r\n});\r\n\r\nself.addEventListener('fetch', e => {\r\n    //Ignore not GET request.\r\n    if (e.request.method !== 'GET') {\r\n        return;\r\n    }\r\n\r\n    const isHashed = e.request.url.includes(\"---\") && (e.request.url.includes(\"dist/main\") || e.request.url.includes(\"dist/chunk\") || e.request.url.includes(\"dist/resourcemanager\"));\r\n\r\n    e.waitUntil(() => {\r\n        fromCache(e.request).then(result => {\r\n            e.respondWith(result);\r\n            if (isHashed) return;\r\n            e.waitUntil(update(e.request));\r\n        }).catch(() => {\r\n            e.respondWith(update(e.request));\r\n        });\r\n    });\r\n});\r\n\r\nfunction fromCache(request) {\r\n    return caches.open(CACHE).then(function (cache) {\r\n        return cache.match(request).then(function (matching) {\r\n            if (matching) {\r\n                return matching;\r\n            } else {\r\n                Promise.reject('no-match');\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction update(request) {\r\n    return caches.open(CACHE).then(function (cache) {\r\n        return fetch(request).then(function (response) {\r\n            cache.put(request, response);\r\n            return response;\r\n        });\r\n    });\r\n}\r\n\r\nself.addEventListener('push', function (e) {\r\n    e.waitUntil((async () => {\r\n        const data = e.data.json();\r\n        console.log(data);\r\n        let employee = {};\r\n        if (data.RequesterId) {\r\n            const response = await fetch(`/api/Employee/GetEmployee?EmployeeId=${data.RequesterId}`,\r\n                {\r\n                    credentials: \"same-origin\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    method: \"Get\",\r\n                }\r\n            );\r\n            employee = await response.json();\r\n        }\r\n        console.log(employee);\r\n        let options = {\r\n            body: data.Body,\r\n            icon: \"data:image/png;base64,\" + employee.Photo || 'content/icon192x192.jpg',\r\n            vibrate: [50, 30, 50],\r\n            //actions: [\r\n            //    {\r\n            //        action: \"yay\", title: \"قبول\"\r\n            //    },\r\n            //    {\r\n            //        action: \"nay\", title: \"رد\"\r\n            //    }\r\n            //]\r\n        };\r\n        console.log(\"before notification\");\r\n        await self.registration.showNotification(`${data.Title} • ${employee.FullName}`, options);\r\n        console.log(\"after notification\");\r\n    })());\r\n});\r\n\r\n//self.addEventListener(\"notificationclick\", (event) => {\r\n//    let promise = new Promise((resolve) => {\r\n//        event.notification.close();\r\n//        console.log(event.action);\r\n//        resolve();\r\n//    });\r\n//    event.waitUntil(promise);\r\n//});\r\n\r\n// Pass Through\r\n//self.addEventListener('fetch', e => {\r\n//    e.respondWith(fetch(e.request));\r\n//});\r\n"],"sourceRoot":""}